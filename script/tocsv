#!/usr/bin/env ruby

require 'yajl'
require 'csv'

inspections_out = CSV.open('out/inspections.csv', 'w', write_headers: true, headers: %w(
  id
  score
  name
  rest_id
  type
  date
  street
  city
  zip
  lat
  lon
))

violations_out = CSV.open('out/violations.csv', 'w', write_headers: true, headers: %w(
  inspection_id
  rest_id
  date
  law
  rule
  violation_comments
  corrective_text
  corrective_comments
))


violations = {
  laws: {},
  rules: {}
}

inspections = Yajl::Parser.parse(File.read("data/inspections.json"), :symbolize_keys => true)
inspections[:results].each do |ins|
  raw_data = Yajl::Parser.parse(File.read("data/violations/#{ins[:inspection_number]}.json"), :symbolize_keys => true)
  v_data = raw_data[:results][:violations]
  zip    = ins[:address][:zip].strip

  # Cleanup some bad data
  zip = "" if zip == '&nbsp;'
  zip = zip.split('-').first

  v_data.each do |v|
    law = v[:law]
    rule = v[:violation_rule]

    violations_out << [
      ins[:inspection_number],
      ins[:restaurant_id],
      raw_data[:results][:date],
      law.strip,
      rule.strip,
      v[:violation_comments],
      v[:corrective_text],
      v[:corrective_comments]
    ]
  end

  inspections_out << [
    ins[:inspection_number],
    ins[:score],
    ins[:name],
    ins[:restaurant_id],
    ins[:type],
    ins[:date],
    ins[:address][:street],
    ins[:address][:city],
    zip,
    ins[:location][:Latitude],
    ins[:location][:Longitude]
  ]
end

inspections_out.close
violations_out.close
